<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dq.aquaranth.company.mapper.CompanyMapper">

    <!--회사코드, 회사명, 대표자명, 사용여부 리스트 출력-->
    <select id="findAll" resultType="com.dq.aquaranth.company.dto.CompanyListDTO">
        select * from tbl_company;
    </select>


    <!--회사 기본정보 출력-->
    <select id="findById" resultType="com.dq.aquaranth.company.dto.CompanyDTO">
        select * from tbl_company where company_no = #{companyNo};
    </select>


    <!--조직에 회사정보 추가-->
    <insert id="insertOrga">
        insert into tbl_orga (upper_orga_no, orga_type, reg_user) value (#{upperOrgaNo}, #{orgaType}, #{regUser});
        <selectKey keyProperty="orgaNo" resultType="long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <!--회사 기본정보 등록-->
    <insert id="insert">
        insert into tbl_company (
            company_no, company_name, company_address, company_tel,
            owner_name, founding_date, business_number, company_use,
            orga_no, reg_user
        ) values (
            #{companyNo}, #{companyName}, #{companyAddress}, #{companyTel},
            #{ownerName}, #{foundingDate}, #{businessNumber}, #{companyUse},
            #{orgaNo}, #{regUser}
        )
        <selectKey keyProperty="companyNo" resultType="long" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>


    <!--회사 기본정보 수정-->
    <update id="update">
        update tbl_company
            set company_name=#{companyName}, company_address=#{companyAddress}, company_tel=#{companyTel},
                owner_name=#{ownerName}, company_use=#{companyUse}, mod_user=#{modUser}, mod_date = now()
        where company_no = #{companyNo}
    </update>


    <!--조직에서 회사정보 삭제-->
    <delete id="deleteOrga">
        delete from tbl_orga where orga_no=#{orgaNo}
    </delete>

    <!--회사정보 삭제-->
    <delete id="deleteById">
        delete from tbl_company where company_no = #{companyNo}
    </delete>


    <!--회사코드, 회사명, 사용여부로 검색-->
    <select id="search" resultType="com.dq.aquaranth.company.dto.CompanyListDTO">
        select * from tbl_company
            where company_use=#{companyUse}
                and (company_no like concat('%', #{companySearch}, '%')
                or company_name like concat('%', #{companySearch}, '%'));
    </select>

<<<<<<< HEAD
    <!--사용자 아이디에 맞는 회사 정보 출력-->
    <select id="findByUsername" resultType="com.dq.aquaranth.company.dto.CompanyDTO">
        select c.*
        from (with recursive findDept as (select to1.orga_no, to1.upper_orga_no, to1.orga_type
                                          from tbl_orga to1
                                                   join tbl_emp_mapping tem on to1.orga_no = tem.orga_no
                                                   join tbl_emp te on te.emp_no = tem.emp_no
                                                   join tbl_dept_mapping m on to1.upper_orga_no = m.orga_no
                                          where te.username = #{username}
                                            and m.dept_main = true
                                          union all
                                          select to2.orga_no, to2.upper_orga_no, to2.orga_type
                                          from tbl_orga to2
                                                   join findDept fd on fd.upper_orga_no = to2.orga_no)
              select f.orga_no, f.orga_type
              from findDept f) x
                 join tbl_company c on c.company_no = x.orga_no
    </select>


    <!--조직토 트리 정보 출력-->
=======
>>>>>>> 84bb86c71e7a88886d241c2bd5851f4b223f3e59
    <select id="orgaTree" resultType="com.dq.aquaranth.company.dto.OrgaTreeDTO">
        with recursive orgaTree(orga_no, tree_name, gno, ord, depth) as (
            select o1.orga_no
                 , tc.company_name
                 , tc.company_no
                 , ifnull(o1.upper_orga_no, 0) as ord
                 , ifnull(o1.upper_orga_no, 0) as depth
            from tbl_orga o1
                     join tbl_company tc on o1.orga_no = tc.orga_no
            union all
            select o2.orga_no
                 , td.dept_name
                 , td.gno
                 , td.ord
                 , td.depth
            from orgaTree ot1
                     join tbl_orga o2 on o2.upper_orga_no = ot1.orga_no
                     join tbl_dept_mapping tdm on o2.orga_no = tdm.orga_no
                     join tbl_dept td on td.dept_no = tdm.dept_no
        )
        select orga_no, tree_name, gno, ord, depth
        from orgaTree ot2
        order by ot2.gno, ot2.ord;
    </select>
</mapper>
